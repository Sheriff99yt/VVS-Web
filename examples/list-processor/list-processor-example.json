{
  "name": "List Processor Example",
  "description": "A program that demonstrates various list operations including filtering, mapping, and sorting",
  "version": "1.0.0",
  "flow": {
    "nodes": [
      {
        "id": "inputNumbers",
        "type": "input",
        "position": { "x": 100, "y": 150 },
        "data": {
          "label": "Input Numbers",
          "type": "String",
          "defaultValue": "5,2,9,1,7,3,8,4,6"
        }
      },
      {
        "id": "splitNumbers",
        "type": "function",
        "position": { "x": 300, "y": 150 },
        "data": {
          "functionId": "string_split",
          "label": "Split by Comma"
        }
      },
      {
        "id": "comma",
        "type": "input",
        "position": { "x": 300, "y": 50 },
        "data": {
          "label": "Delimiter",
          "type": "String",
          "defaultValue": ","
        }
      },
      {
        "id": "convertToInt",
        "type": "function",
        "position": { "x": 550, "y": 150 },
        "data": {
          "functionId": "list_map",
          "label": "Convert to Numbers"
        }
      },
      {
        "id": "intConverter",
        "type": "function",
        "position": { "x": 550, "y": 50 },
        "data": {
          "functionId": "convert_to_int",
          "label": "Int Converter"
        }
      },
      {
        "id": "threshold",
        "type": "input",
        "position": { "x": 800, "y": 50 },
        "data": {
          "label": "Filter Threshold",
          "type": "Number",
          "defaultValue": 5
        }
      },
      {
        "id": "filterFunction",
        "type": "function",
        "position": { "x": 800, "y": 300 },
        "data": {
          "functionId": "logic_compare_gt",
          "label": "Is Greater Than"
        }
      },
      {
        "id": "filterNumbers",
        "type": "function",
        "position": { "x": 800, "y": 150 },
        "data": {
          "functionId": "list_filter",
          "label": "Filter Numbers > Threshold"
        }
      },
      {
        "id": "sortNumbers",
        "type": "function",
        "position": { "x": 1000, "y": 150 },
        "data": {
          "functionId": "list_sort",
          "label": "Sort Numbers"
        }
      },
      {
        "id": "reverseSortFlag",
        "type": "input",
        "position": { "x": 1000, "y": 50 },
        "data": {
          "label": "Reverse Sort",
          "type": "Boolean",
          "defaultValue": true
        }
      },
      {
        "id": "calculateMin",
        "type": "function",
        "position": { "x": 1200, "y": 100 },
        "data": {
          "functionId": "math_min",
          "label": "Find Minimum"
        }
      },
      {
        "id": "calculateMax",
        "type": "function",
        "position": { "x": 1200, "y": 200 },
        "data": {
          "functionId": "math_max",
          "label": "Find Maximum"
        }
      },
      {
        "id": "outputSorted",
        "type": "output",
        "position": { "x": 1200, "y": 300 },
        "data": {
          "label": "Sorted Numbers"
        }
      },
      {
        "id": "outputMin",
        "type": "output",
        "position": { "x": 1400, "y": 100 },
        "data": {
          "label": "Minimum Value"
        }
      },
      {
        "id": "outputMax",
        "type": "output",
        "position": { "x": 1400, "y": 200 },
        "data": {
          "label": "Maximum Value"
        }
      }
    ],
    "edges": [
      {
        "id": "edge-inputNumbers-splitNumbers",
        "source": "inputNumbers",
        "sourceHandle": "output",
        "target": "splitNumbers",
        "targetHandle": "string"
      },
      {
        "id": "edge-comma-splitNumbers",
        "source": "comma",
        "sourceHandle": "output",
        "target": "splitNumbers",
        "targetHandle": "delimiter"
      },
      {
        "id": "edge-splitNumbers-convertToInt",
        "source": "splitNumbers",
        "sourceHandle": "output",
        "target": "convertToInt",
        "targetHandle": "lst"
      },
      {
        "id": "edge-intConverter-convertToInt",
        "source": "intConverter",
        "sourceHandle": "output",
        "target": "convertToInt",
        "targetHandle": "function"
      },
      {
        "id": "edge-convertToInt-filterNumbers",
        "source": "convertToInt",
        "sourceHandle": "output",
        "target": "filterNumbers",
        "targetHandle": "lst"
      },
      {
        "id": "edge-filterFunction-filterNumbers",
        "source": "filterFunction",
        "sourceHandle": "output",
        "target": "filterNumbers",
        "targetHandle": "function"
      },
      {
        "id": "edge-threshold-filterFunction",
        "source": "threshold",
        "sourceHandle": "output",
        "target": "filterFunction",
        "targetHandle": "b"
      },
      {
        "id": "edge-filterNumbers-sortNumbers",
        "source": "filterNumbers",
        "sourceHandle": "output",
        "target": "sortNumbers",
        "targetHandle": "lst"
      },
      {
        "id": "edge-reverseSortFlag-sortNumbers",
        "source": "reverseSortFlag",
        "sourceHandle": "output",
        "target": "sortNumbers",
        "targetHandle": "reverse"
      },
      {
        "id": "edge-sortNumbers-outputSorted",
        "source": "sortNumbers",
        "sourceHandle": "output",
        "target": "outputSorted",
        "targetHandle": "input"
      },
      {
        "id": "edge-sortNumbers-calculateMin-first",
        "source": "sortNumbers",
        "sourceHandle": "output",
        "target": "calculateMin",
        "targetHandle": "a"
      },
      {
        "id": "edge-sortNumbers-calculateMin-second",
        "source": "sortNumbers",
        "sourceHandle": "output",
        "target": "calculateMin",
        "targetHandle": "b"
      },
      {
        "id": "edge-sortNumbers-calculateMax-first",
        "source": "sortNumbers",
        "sourceHandle": "output",
        "target": "calculateMax",
        "targetHandle": "a"
      },
      {
        "id": "edge-sortNumbers-calculateMax-second",
        "source": "sortNumbers",
        "sourceHandle": "output",
        "target": "calculateMax",
        "targetHandle": "b"
      },
      {
        "id": "edge-calculateMin-outputMin",
        "source": "calculateMin",
        "sourceHandle": "output",
        "target": "outputMin",
        "targetHandle": "input"
      },
      {
        "id": "edge-calculateMax-outputMax",
        "source": "calculateMax",
        "sourceHandle": "output",
        "target": "outputMax",
        "targetHandle": "input"
      }
    ]
  },
  "expectedOutput": {
    "code": "# List Processor Example\n\n# Inputs\ninput_numbers = \"5,2,9,1,7,3,8,4,6\"\ndelimiter = \",\"\nfilter_threshold = 5\nreverse_sort = True\n\n# Process list\nnumber_strings = input_numbers.split(delimiter)\nnumbers = list(map(int, number_strings))\nfiltered_numbers = list(filter(lambda x: x > filter_threshold, numbers))\nsorted_numbers = sorted(filtered_numbers, reverse=reverse_sort)\n\n# Calculate min and max\nminimum = min(sorted_numbers[0], sorted_numbers[-1])\nmaximum = max(sorted_numbers[0], sorted_numbers[-1])\n\n# Output\nprint(f\"Sorted numbers: {sorted_numbers}\")\nprint(f\"Minimum value: {minimum}\")\nprint(f\"Maximum value: {maximum}\")"
  }
} 