{
  "metadata": {
    "name": "Execution Flow Example",
    "description": "Demonstrates execution flow with conditional branching",
    "version": "1.0.0",
    "author": "VVS Team",
    "category": "Examples",
    "tags": ["execution-flow", "conditional", "branching"]
  },
  "nodes": [
    {
      "id": "input-1",
      "type": "input",
      "position": { "x": 100, "y": 100 },
      "data": {
        "label": "Number",
        "type": "number",
        "defaultValue": 5,
        "hasExecutionPorts": false
      }
    },
    {
      "id": "if-node",
      "type": "function",
      "position": { "x": 400, "y": 100 },
      "data": {
        "label": "If Statement",
        "category": "Control Flow",
        "functionId": 101,
        "hasExecutionPorts": true,
        "executionInputs": [
          { "id": "exec-in", "label": "In" }
        ],
        "executionOutputs": [
          { "id": "true-branch", "label": "True" },
          { "id": "false-branch", "label": "False" }
        ],
        "inputs": [
          { "id": "condition", "name": "Condition", "type": "boolean", "required": true }
        ],
        "outputs": []
      }
    },
    {
      "id": "compare-node",
      "type": "function",
      "position": { "x": 250, "y": 200 },
      "data": {
        "label": "Greater Than",
        "category": "Comparison",
        "functionId": 201,
        "hasExecutionPorts": false,
        "inputs": [
          { "id": "left", "name": "Left", "type": "number", "required": true },
          { "id": "right", "name": "Right", "type": "number", "required": true, "defaultValue": 10 }
        ],
        "outputs": [
          { "id": "result", "name": "Result", "type": "boolean" }
        ]
      }
    },
    {
      "id": "true-node",
      "type": "function",
      "position": { "x": 300, "y": 300 },
      "data": {
        "label": "Print",
        "category": "Output",
        "functionId": 301,
        "hasExecutionPorts": true,
        "executionInputs": [
          { "id": "exec-in", "label": "In" }
        ],
        "executionOutputs": [
          { "id": "exec-out", "label": "Out" }
        ],
        "inputs": [
          { "id": "message", "name": "Message", "type": "string", "required": true, "defaultValue": "Number is greater than 10!" }
        ],
        "outputs": []
      }
    },
    {
      "id": "false-node",
      "type": "function",
      "position": { "x": 500, "y": 300 },
      "data": {
        "label": "Print",
        "category": "Output",
        "functionId": 301,
        "hasExecutionPorts": true,
        "executionInputs": [
          { "id": "exec-in", "label": "In" }
        ],
        "executionOutputs": [
          { "id": "exec-out", "label": "Out" }
        ],
        "inputs": [
          { "id": "message", "name": "Message", "type": "string", "required": true, "defaultValue": "Number is less than or equal to 10!" }
        ],
        "outputs": []
      }
    },
    {
      "id": "entry-node",
      "type": "function",
      "position": { "x": 100, "y": 400 },
      "data": {
        "label": "Start",
        "category": "Control Flow",
        "functionId": 401,
        "hasExecutionPorts": true,
        "executionInputs": [],
        "executionOutputs": [
          { "id": "exec-out", "label": "Out" }
        ],
        "inputs": [],
        "outputs": []
      }
    },
    {
      "id": "end-node",
      "type": "function",
      "position": { "x": 400, "y": 500 },
      "data": {
        "label": "End",
        "category": "Control Flow",
        "functionId": 402,
        "hasExecutionPorts": true,
        "executionInputs": [
          { "id": "exec-in", "label": "In" }
        ],
        "executionOutputs": [],
        "inputs": [],
        "outputs": []
      }
    }
  ],
  "edges": [
    {
      "id": "e1",
      "source": "input-1",
      "target": "compare-node",
      "sourceHandle": "output",
      "targetHandle": "input-left",
      "data": {
        "type": "data"
      }
    },
    {
      "id": "e2",
      "source": "compare-node",
      "target": "if-node",
      "sourceHandle": "output-result",
      "targetHandle": "input-condition",
      "data": {
        "type": "data"
      }
    },
    {
      "id": "e3",
      "source": "entry-node",
      "target": "if-node",
      "sourceHandle": "exec-output-exec-out",
      "targetHandle": "exec-input-exec-in",
      "data": {
        "type": "execution"
      }
    },
    {
      "id": "e4",
      "source": "if-node",
      "target": "true-node",
      "sourceHandle": "exec-output-true-branch",
      "targetHandle": "exec-input-exec-in",
      "data": {
        "type": "execution"
      }
    },
    {
      "id": "e5",
      "source": "if-node",
      "target": "false-node",
      "sourceHandle": "exec-output-false-branch",
      "targetHandle": "exec-input-exec-in",
      "data": {
        "type": "execution"
      }
    },
    {
      "id": "e6",
      "source": "true-node",
      "target": "end-node",
      "sourceHandle": "exec-output-exec-out",
      "targetHandle": "exec-input-exec-in",
      "data": {
        "type": "execution"
      }
    },
    {
      "id": "e7",
      "source": "false-node",
      "target": "end-node",
      "sourceHandle": "exec-output-exec-out",
      "targetHandle": "exec-input-exec-in",
      "data": {
        "type": "execution"
      }
    }
  ],
  "expectedOutput": {
    "code": "# Required Imports\n\n# Execution Flow Based Generation\n\n# Main execution function\ndef main():\n    # Input variables\n    number = 5\n\n    # Start execution from Start\n    # If Statement\n    if greater_than_result:\n        # Print\n        print(\"Number is greater than 10!\")\n    else:\n        # Print\n        print(\"Number is less than or equal to 10!\")\n    # End\n\n\n# Execute the program\nif __name__ == \"__main__\":\n    main()\n"
  }
} 