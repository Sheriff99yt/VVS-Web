{
  "version": 1,
  "languages": ["typescript", "python", "java", "rust"],
  "functions": [
    {
      "id": "arrayLength",
      "name": "Array Length",
      "category": "array",
      "description": "Get the length of an array",
      "implementations": {
        "typescript": {
          "modifiers": {
            "access": "public",
            "static": true,
            "readonly": true
          },
          "signature": {
            "returnType": "number",
            "generics": {
              "parameters": ["T"]
            }
          },
          "parameters": [
            {
              "text": "array: T[]",
              "optional": true
            }
          ],
          "body": {
            "validation": "if (!array) return 0;",
            "typeGuards": "if (!Array.isArray(array)) return 0;",
            "implementation": "return array.length;"
          }
        },
        "python": {
          "decorators": ["@staticmethod", "@overload"],
          "signature": {
            "returnType": "int",
            "generics": {
              "parameters": ["T"]
            }
          },
          "parameters": [
            {
              "text": "array: list[T]",
              "default": "None"
            }
          ],
          "body": {
            "validation": "if not array: return 0",
            "typeGuards": "if not isinstance(array, list): return 0",
            "implementation": "return len(array)"
          }
        }
      }
    },
    {
      "id": "forLoop",
      "name": "For Loop",
      "category": "control",
      "description": "Execute code for each element in a collection",
      "implementations": {
        "typescript": {
          "modifiers": {
            "access": "public",
            "static": true
          },
          "signature": {
            "returnType": "void",
            "generics": {
              "parameters": ["T"]
            }
          },
          "parameters": [
            {
              "text": "array: T[]"
            },
            {
              "text": "callback: (item: T, index: number) => void"
            }
          ],
          "body": {
            "validation": "if (!array || !callback) return;",
            "typeGuards": "if (!Array.isArray(array)) return;",
            "implementation": "for (let i = 0; i < array.length; i++) {\n    callback(array[i], i);\n}"
          }
        },
        "python": {
          "decorators": ["@staticmethod"],
          "signature": {
            "returnType": "None",
            "generics": {
              "parameters": ["T"]
            }
          },
          "parameters": [
            {
              "text": "array: list[T]"
            },
            {
              "text": "callback: Callable[[T, int], None]"
            }
          ],
          "body": {
            "validation": "if not array or not callback: return",
            "typeGuards": "if not isinstance(array, list): return",
            "implementation": "for i, item in enumerate(array):\n    callback(item, i)"
          }
        }
      }
    }
  ]
} 